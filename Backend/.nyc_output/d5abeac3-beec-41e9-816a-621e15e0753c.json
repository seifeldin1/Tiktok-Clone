{"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\config\\db.ts":{"path":"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\config\\db.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":55}},"5":{"start":{"line":8,"column":18},"end":{"line":22,"column":1}},"6":{"start":{"line":9,"column":4},"end":{"line":21,"column":5}},"7":{"start":{"line":10,"column":8},"end":{"line":16,"column":9}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":88}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":85}},"10":{"start":{"line":15,"column":12},"end":{"line":15,"column":52}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":49}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":18}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":18},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":30},"end":{"line":22,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":10,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":13},"end":{"line":16,"column":9}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":1},"f":{"0":1,"1":1},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/config/db.ts","sources":["C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/config/db.ts"],"names":[],"mappings":";;;;;;AAAA,wDAAgC;AAEzB,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;IAClC,IAAI,CAAC;QACH,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;YAClC,MAAM,IAAI,GAAG,MAAM,kBAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACnE,OAAO,CAAC,GAAG,CAAC,qCAAqC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAC3E,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC;QACzC,MAAM,GAAG,CAAC;IACZ,CAAC;AACH,CAAC,CAAC;AAZW,QAAA,SAAS,aAYpB","sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nexport const connectDB = async () => {\r\n  try {\r\n    if (process.env.MONGO_TEST_DB_URL) {\r\n      const conn = await mongoose.connect(process.env.MONGO_TEST_DB_URL);\r\n      console.log(`Successfully connected to MongoDB ${conn.connection.host}`);\r\n    } else {\r\n      throw new Error(\"Can't find MONGO_URL\");\r\n    }\r\n  } catch (err) {\r\n    console.error(`Error in MongoDB ${err}`);\r\n    throw err;\r\n  }\r\n};\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6ba13ae0153c7d70c72e317e3594b6e2fba2eff2","contentHash":"2c35221c2968b32ba2d08aeef7648b3624aa3e0b8f8237ee36dabf65b7868325"},"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\models\\user.ts":{"path":"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\models\\user.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"15":{"start":{"line":19,"column":18},"end":{"line":26,"column":5}},"16":{"start":{"line":20,"column":8},"end":{"line":24,"column":10}},"17":{"start":{"line":21,"column":21},"end":{"line":21,"column":23}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":95}},"19":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"20":{"start":{"line":22,"column":77},"end":{"line":22,"column":95}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":22}},"22":{"start":{"line":25,"column":8},"end":{"line":25,"column":26}},"23":{"start":{"line":27,"column":4},"end":{"line":33,"column":6}},"24":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"25":{"start":{"line":28,"column":35},"end":{"line":28,"column":46}},"26":{"start":{"line":29,"column":21},"end":{"line":29,"column":23}},"27":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"28":{"start":{"line":30,"column":25},"end":{"line":30,"column":137}},"29":{"start":{"line":30,"column":38},"end":{"line":30,"column":50}},"30":{"start":{"line":30,"column":56},"end":{"line":30,"column":57}},"31":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"32":{"start":{"line":30,"column":102},"end":{"line":30,"column":137}},"33":{"start":{"line":31,"column":8},"end":{"line":31,"column":40}},"34":{"start":{"line":32,"column":8},"end":{"line":32,"column":22}},"35":{"start":{"line":35,"column":0},"end":{"line":35,"column":62}},"36":{"start":{"line":37,"column":19},"end":{"line":37,"column":52}},"37":{"start":{"line":38,"column":19},"end":{"line":83,"column":24}},"38":{"start":{"line":84,"column":18},"end":{"line":84,"column":62}},"39":{"start":{"line":85,"column":0},"end":{"line":85,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":51},"end":{"line":18,"column":52}},"loc":{"start":{"line":18,"column":63},"end":{"line":34,"column":1}},"line":18},"6":{"name":"(anonymous_6)","decl":{"start":{"line":19,"column":18},"end":{"line":19,"column":19}},"loc":{"start":{"line":19,"column":30},"end":{"line":26,"column":5}},"line":19},"7":{"name":"(anonymous_7)","decl":{"start":{"line":20,"column":48},"end":{"line":20,"column":49}},"loc":{"start":{"line":20,"column":61},"end":{"line":24,"column":9}},"line":20},"8":{"name":"(anonymous_8)","decl":{"start":{"line":27,"column":11},"end":{"line":27,"column":12}},"loc":{"start":{"line":27,"column":26},"end":{"line":33,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{},"end":{}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{},"end":{}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{},"end":{}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":34,"column":4}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":34,"column":4}}],"line":18},"11":{"loc":{"start":{"line":20,"column":18},"end":{"line":24,"column":9}},"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":44}},{"start":{"line":20,"column":48},"end":{"line":24,"column":9}}],"line":20},"12":{"loc":{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},"type":"if","locations":[{"start":{"line":22,"column":29},"end":{"line":22,"column":95}},{"start":{},"end":{}}],"line":22},"13":{"loc":{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":46}},{"start":{},"end":{}}],"line":28},"14":{"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":33}},"type":"binary-expr","locations":[{"start":{"line":28,"column":12},"end":{"line":28,"column":15}},{"start":{"line":28,"column":19},"end":{"line":28,"column":33}}],"line":28},"15":{"loc":{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":30,"column":137}},{"start":{},"end":{}}],"line":30},"16":{"loc":{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},"type":"if","locations":[{"start":{"line":30,"column":78},"end":{"line":30,"column":137}},{"start":{},"end":{}}],"line":30}},"s":{"0":1,"1":53,"2":53,"3":53,"4":53,"5":52,"6":1,"7":53,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1,"25":0,"26":1,"27":1,"28":1,"29":1,"30":1,"31":54,"32":53,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1},"f":{"0":53,"1":1,"2":0,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1},"b":{"0":[1,1,1],"1":[1,0],"2":[53,0],"3":[52,1],"4":[53,53],"5":[0,53],"6":[53,1],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[1,0],"12":[0,0],"13":[0,1],"14":[1,1],"15":[1,0],"16":[53,1]},"inputSourceMap":{"version":3,"file":"C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/models/user.ts","sources":["C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/models/user.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,uBAAuB;AACvB,qDAA4C;AAG5C,MAAM,UAAU,GAAG,IAAI,iBAAM,CAAQ;IACnC,KAAK,EAAE;QACL,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,IAAI;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,CAAC;KACb;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,QAAQ,EAAE,IAAI;KACf;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,OAAO,EAAE,EAAE;KACZ;IACD,GAAG,EAAE,MAAM;IACX,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;IAClE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,kBAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,MAAM,EAAE,CAAC;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,MAAM;QACZ,IAAI,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;QACvB,OAAO,EAAE,MAAM;KAChB;IACD,OAAO,EAAE;QACP,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,KAAK;KACf;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;KACb;IACD,UAAU,EAAE;QACV,IAAI,EAAE,MAAM;QACZ,MAAM,EAAE,IAAI;QACZ,MAAM,EAAE,IAAI;KACb;CACF,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,MAAM,SAAS,GAAG,kBAAQ,CAAC,KAAK,CAAQ,MAAM,EAAE,UAAU,CAAC,CAAC;AAC5D,kBAAe,SAAS,CAAC","sourcesContent":["// models/user.model.ts\r\nimport mongoose, { Schema } from \"mongoose\";\r\nimport { IUser } from \"../interfaces/models/IUser\";\r\n\r\nconst userSchema = new Schema<IUser>({\r\n  email: {\r\n    type: String,\r\n    required: true,\r\n    unique: true,\r\n  },\r\n  username: {\r\n    type: String,\r\n    required: true,\r\n    unique: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    minlength: 8,\r\n  },\r\n  fullName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  profilePic: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  bio: String,\r\n  followers: [{ type: mongoose.Schema.Types.ObjectId, ref: \"User\" }],\r\n  following: [{ type: mongoose.Schema.Types.ObjectId, ref: \"User\" }],\r\n  role: {\r\n    type: String,\r\n    enum: [\"user\", \"admin\"],\r\n    default: \"user\",\r\n  },\r\n  deleted: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  googleId: {\r\n    type: String,\r\n    unique: true,\r\n    sparse: true,\r\n  },\r\n  facebookId: {\r\n    type: String,\r\n    unique: true,\r\n    sparse: true,\r\n  },\r\n}, { timestamps: true });\r\n\r\nconst UserModel = mongoose.model<IUser>(\"User\", userSchema);\r\nexport default UserModel;\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"31d2c1c1b5d4bc3c49f81221450498a8643842b4","contentHash":"7d240aad843b03df74f220461f79ce337e793fc4d69a882dac60288425596b1a"},"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\repositories\\UserRepository.ts":{"path":"C:\\Users\\ben10\\Desktop\\Tiktok-Project\\Tiktok-Clone\\Backend\\src\\repositories\\UserRepository.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":15},"end":{"line":6,"column":57}},"4":{"start":{"line":15,"column":25},"end":{"line":15,"column":49}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":30}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"7":{"start":{"line":25,"column":8},"end":{"line":25,"column":55}},"8":{"start":{"line":33,"column":8},"end":{"line":33,"column":49}},"9":{"start":{"line":42,"column":8},"end":{"line":42,"column":58}},"10":{"start":{"line":51,"column":25},"end":{"line":51,"column":115}},"11":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"12":{"start":{"line":53,"column":12},"end":{"line":53,"column":46}},"13":{"start":{"line":55,"column":8},"end":{"line":55,"column":24}},"14":{"start":{"line":64,"column":8},"end":{"line":64,"column":51}},"15":{"start":{"line":67,"column":0},"end":{"line":67,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":23},"end":{"line":18,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":29},"end":{"line":26,"column":5}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":23},"end":{"line":34,"column":5}},"line":32},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":35},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":23},"end":{"line":56,"column":5}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":21},"end":{"line":65,"column":5}},"line":63}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},"type":"if","locations":[{"start":{"line":52,"column":8},"end":{"line":54,"column":9}},{"start":{},"end":{}}],"line":52}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1},"f":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":1,"6":1},"b":{"0":[1,1,1],"1":[1,0],"2":[1,1],"3":[0,1]},"inputSourceMap":{"version":3,"file":"C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/repositories/UserRepository.ts","sources":["C:/Users/ben10/Desktop/Tiktok-Project/Tiktok-Clone/Backend/src/repositories/UserRepository.ts"],"names":[],"mappings":";;;;;AAEA,0DAAuC;AAEvC,MAAM,cAAc;IAChB;;;;;OAKG;IACH,KAAK,CAAC,MAAM,CAAC,IAAoB;QAC7B,MAAM,QAAQ,GAAG,IAAI,cAAS,CAAC,IAAI,CAAC,CAAA;QACpC,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAA;QACrB,OAAO,QAAQ,CAAA;IACnB,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,WAAW,CAAC,KAAa;QAC3B,OAAO,MAAM,cAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,CAAA;IAC7C,CAAC;IAED;;;;OAIG;IACH,KAAK,CAAC,QAAQ,CAAC,EAAU;QACrB,OAAO,MAAM,cAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA;IACvC,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,cAAc,CAAC,QAAgB;QACjC,OAAO,MAAM,cAAS,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAA;IAChD,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,MAAM,CAAC,IAAoB;QAC7B,MAAM,QAAQ,GAAG,MAAM,cAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAG,aAAa,EAAE,IAAI,EAAE,CAAC,CAAA;QACvG,IAAI,CAAC,QAAQ,EAAE,CAAC;YACZ,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAA;QACrC,CAAC;QACD,OAAO,QAAQ,CAAA;IACnB,CAAC;IAGD;;;;;OAKG;IACH,KAAK,CAAC,MAAM,CAAC,EAAU;QACnB,MAAM,cAAS,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAA;IACzC,CAAC;CAGJ;AAED,kBAAe,cAAc,CAAA","sourcesContent":["import { IUserRepository } from \"../interfaces/repositories/IUserRepository\";\r\nimport { IUser } from \"../interfaces/models/IUser\";\r\nimport UserModel from \"../models/user\";\r\n\r\nclass UserRepository implements IUserRepository {\r\n    /**\r\n     * Creates a new user in the database.\r\n     * \r\n     * @param user - Partial user object containing user details.\r\n     * @returns The created user object.\r\n     */\r\n    async create(user: Partial<IUser>): Promise<IUser> {\r\n        const userData = new UserModel(user)\r\n        await userData.save()\r\n        return userData\r\n    }\r\n\r\n    /**\r\n     * Finds a user by their email address\r\n     * @param email The email address of the user to find\r\n     * @returns The user with the given email address, or null if no user is found\r\n     */\r\n    async findByEmail(email: string): Promise<IUser | null> {\r\n        return await UserModel.findOne({ email })\r\n    }\r\n\r\n    /**\r\n     * Finds a user by their id\r\n     * @param id The id of the user to find\r\n     * @returns The user with the given id, or null if no user is found\r\n     */\r\n    async findById(id: string): Promise<IUser | null> {\r\n        return await UserModel.findById(id)\r\n    }\r\n\r\n    /**\r\n     * Finds a user by their username.\r\n     * \r\n     * @param username The username of the user to find.\r\n     * @returns The user with the given username, or null if no user is found.\r\n     */\r\n    async findByUsername(username: string): Promise<IUser | null> {\r\n        return await UserModel.findOne({ username })\r\n    }\r\n\r\n    /**\r\n     * Updates an existing user in the database.\r\n     * \r\n     * @param user - Partial user object containing user details.\r\n     * @returns The updated user object.\r\n     */\r\n    async update(user: Partial<IUser>): Promise<IUser> {\r\n        const userData = await UserModel.findByIdAndUpdate(user._id, user, { new: true , runValidators: true })\r\n        if (!userData) {\r\n            throw new Error(\"User not found\")\r\n        }\r\n        return userData\r\n    }\r\n\r\n\r\n    /**\r\n     * Deletes a user in the database.\r\n     * \r\n     * @param id The id of the user to delete.\r\n     * @throws If the user is not found.\r\n     */\r\n    async delete(id: string): Promise<void> {\r\n        await UserModel.findByIdAndDelete(id)\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default UserRepository"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"21fa2482e676ec6d6580f1bd6b676fccb9216e06","contentHash":"fa3af0d13371aba1b8e1bda222a788b79309f506a0c4e1d6ef61c3db6b3fd0f7"}}